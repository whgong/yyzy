SET SCHEMA = MD;

CREATE PROCEDURE MD.P_ETL_MAIN (
    IN TGTTABLE    VARCHAR(128),
    IN SRCTABLE    VARCHAR(128),
    IN LOADTYPE    VARCHAR(1),
    IN LOADFIELD    VARCHAR(255),
    IN LOADVALUE    VARCHAR(255) )
  SPECIFIC SQL120113205044900
  LANGUAGE SQL
  NOT DETERMINISTIC
  EXTERNAL ACTION
  MODIFIES SQL DATA
  CALLED ON NULL INPUT
  INHERIT SPECIAL REGISTERS
BEGIN
    DECLARE RUNSTATUS INTEGER DEFAULT 0;
    DECLARE STARTTIME TIMESTAMP;
      DECLARE DELCNT,UPTCNT,INSCNT INTEGER DEFAULT 0;
      DECLARE MESSAGE VARCHAR(4000) DEFAULT '';
    DECLARE SQL    VARCHAR(4000) DEFAULT '';
    
    DECLARE STMT VARCHAR(4000) DEFAULT '';
    
    DECLARE c1 CURSOR FOR s1;
    
    SET STARTTIME=CURRENT TIMESTAMP;
    
    --验证目标数据表
    CALL MD.P_ETL_VALIDTGTTABLE(TGTTABLE,RUNSTATUS,MESSAGE,SQL);
    IF RUNSTATUS<>0 THEN GOTO EXIT; END IF;
    IF UCASE(LOADTYPE)<>'S' THEN
      --验证源数据表
      CALL MD.P_ETL_VALIDSRCTABLE(SRCTABLE,RUNSTATUS,MESSAGE,SQL);
      IF RUNSTATUS<>0 THEN GOTO EXIT; END IF;
      --验证目标数据表和源数据表的结构是否一致
      CALL MD.P_ETL_VALIDSTRUCTURE(TGTTABLE,SRCTABLE,RUNSTATUS,MESSAGE,SQL);
      IF RUNSTATUS<>0 THEN GOTO EXIT; END IF;
    END IF;
    --验证加载类型和加载字段是否有效
    CALL MD.P_ETL_VALIDLOADFIELD(TGTTABLE,LOADTYPE,LOADFIELD,LOADVALUE,RUNSTATUS,MESSAGE,SQL);
    IF RUNSTATUS<>0 THEN GOTO EXIT; END IF;
    --生成加载脚本
    CALL MD.P_ETL_GENERATESQL(SRCTABLE,TGTTABLE,LOADTYPE,LOADFIELD,LOADVALUE,RUNSTATUS,MESSAGE); 
    IF RUNSTATUS<>0 THEN GOTO EXIT; END IF;
    --执行加载过程
    CALL MD.P_ETL_EXECUTESQL(TGTTABLE,'SESSION.ETL_TEMPSQL',RUNSTATUS,DELCNT,UPTCNT,INSCNT,MESSAGE,SQL);
    IF RUNSTATUS<>0 THEN GOTO EXIT; END IF;
    
  EXIT:    
    IF RUNSTATUS=0 THEN
      COMMIT;
    ELSE
      ROLLBACK;
    END IF;
    
    INSERT INTO MD.N_ETL_LOG
      (TGTDB,TGTSCHEMA,TGTTABLE,SRCSCHEMA,SRCTABLE,LOADTYPE,RUNSTATUS,STARTTIME,ENDTIME,DELCNT,UPTCNT,INSCNT,LOADVALUE,MESSAGE,SQL)
    VALUES
    (
      'DDS',
      SUBSTR(TGTTABLE,1,LOCATE('.',TGTTABLE)-1),
      SUBSTR(TGTTABLE,LOCATE('.',TGTTABLE)+1),
      CASE WHEN LOCATE('.',SRCTABLE)=0 THEN CAST(NULL AS VARCHAR(128)) ELSE SUBSTR(SRCTABLE,1,LOCATE('.',SRCTABLE)-1) END,
      CASE WHEN LOCATE('.',SRCTABLE)=0 THEN CAST(NULL AS VARCHAR(128)) ELSE SUBSTR(SRCTABLE,LOCATE('.',SRCTABLE)+1) END,
      LOADTYPE,RUNSTATUS,STARTTIME,CURRENT TIMESTAMP,DELCNT,UPTCNT,INSCNT,LOADVALUE,MESSAGE,SQL
    );
  END;
