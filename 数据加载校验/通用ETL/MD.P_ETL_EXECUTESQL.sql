SET SCHEMA = MD;

CREATE PROCEDURE MD.P_ETL_EXECUTESQL (
    IN TGTTABLE    VARCHAR(128),
    IN SQLTABNAME    VARCHAR(128),
    OUT RUNSTATUS    INTEGER,
    OUT DELCNT    INTEGER,
    OUT UPTCNT    INTEGER,
    OUT INSCNT    INTEGER,
    INOUT MESSAGE    VARCHAR(4000),
    OUT SQL    VARCHAR(4000) )
  SPECIFIC SQL120113204339000
  LANGUAGE SQL
  NOT DETERMINISTIC
  EXTERNAL ACTION
  MODIFIES SQL DATA
  CALLED ON NULL INPUT
  INHERIT SPECIAL REGISTERS
--存储过程
  BEGIN
    --定义系统变量
    DECLARE SQLSTATE CHAR(5);
    DECLARE SQLCODE INTEGER;

    --定义
    DECLARE STMT VARCHAR(4000);
    DECLARE STMT2 VARCHAR(4000);
    DECLARE STMT3 VARCHAR(4000);
    DECLARE TYPE CHAR(1);
    DECLARE COUNT INTEGER DEFAULT 0;
    DECLARE ISEXIST INTEGER DEFAULT 0;
    DECLARE i INTEGER DEFAULT 0;
    DECLARE STRCNT VARCHAR(100) DEFAULT '';
     DECLARE ERR_MSG VARCHAR(1000) DEFAULT '';
--    DECLARE RUNSTATUS INTEGER;
    DECLARE AT_END SMALLINT DEFAULT 0;

    --定义动态游标
    DECLARE c1 CURSOR FOR s1;
    DECLARE c2 CURSOR FOR s2;
    
    --定义异常处理
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION   
      SET ERR_MSG = '系统错误：SQLCODE='||RTRIM(CHAR(SQLCODE))||',SQLSTATE='||SQLSTATE||';  ';
      
    SET MESSAGE=MESSAGE||RTRIM(CHAR(CURRENT TIMESTAMP))||'  开始加载目标数据表('||TGTTABLE||')……  ';

    SET ERR_MSG='';
    --检查脚本是否存在  
    SET STMT = 'SELECT COUNT(*) FROM '||SQLTABNAME||' WHERE RTRIM(TGTSCHEMA)||''.''||TGTTABLE='''||TGTTABLE||'''';
    PREPARE s1 FROM STMT;
    
    OPEN c1;
    FETCH c1 INTO ISEXIST;
    CLOSE c1;
    
    IF ERR_MSG<>'' THEN
      SET RUNSTATUS=1;
      SET MESSAGE=MESSAGE||'1.'||ERR_MSG;
    ELSEIF ISEXIST=0 THEN
      SET RUNSTATUS=2;
      SET MESSAGE=MESSAGE||'1.未生成相应脚本;  ';
    ELSE
      SET RUNSTATUS=0;
      SET MESSAGE=MESSAGE||'1.已生成相应脚本;  ';
    END IF;
    
    IF RUNSTATUS<>0 THEN RETURN 0; END IF;

    SET STMT = 'SELECT TYPE,SQL FROM '||SQLTABNAME||' WHERE RTRIM(TGTSCHEMA)||''.''||TGTTABLE='''||TGTTABLE||''' ORDER BY XH';
    PREPARE s1 FROM STMT;
    
    --打开游标
    OPEN c1;
    WHILE i < ISEXIST DO
      FETCH c1 INTO TYPE,STMT2;
      SET ERR_MSG='';
      IF UCASE(TYPE) IN ('D','U','I') THEN
        SET STMT=MD.F_ETL_GETCOUNTSQL(TYPE,STMT2);
        IF STMT='' THEN
          SET RUNSTATUS=2;
          SET MESSAGE=MESSAGE||'2.脚本解析出错;  ';
          SET SQL=STMT2;
        ELSE
          SET RUNSTATUS=0;
          SET MESSAGE=MESSAGE||'2.脚本解析成功;  ';
          SET SQL='';
        END IF;
        
        IF RUNSTATUS<>0 THEN RETURN 0; END IF;
        
        SET ERR_MSG='';
        PREPARE s2 FROM STMT;
        OPEN c2;
        FETCH c2 INTO COUNT;
        CLOSE c2;
        
        IF LCASE(TYPE)='d' THEN
          SET DELCNT=COALESCE(DELCNT,0)+COUNT;
        ELSEIF LCASE(TYPE)='u' THEN
          SET UPTCNT=COALESCE(UPTCNT,0)+COUNT;
        ELSEIF LCASE(TYPE)='i' THEN
          SET INSCNT=COALESCE(INSCNT,0)+COUNT;
        END IF;
        
        IF COUNT<>0 THEN 
          PREPARE s2 FROM STMT2;
          EXECUTE s2;
        END IF;
        
        IF ERR_MSG<>'' THEN
          SET MESSAGE=MESSAGE||'3.'||ERR_MSG; 
          SET RUNSTATUS=1;
          SET SQL=STMT2;
        ELSE
          IF LCASE(TYPE)='d' THEN
             SET MESSAGE=MESSAGE||'3.删除记录：'||RTRIM(CHAR(COUNT))||';  ';
          ELSEIF LCASE(TYPE)='u' THEN
             SET MESSAGE=MESSAGE||'3.更新记录：'||RTRIM(CHAR(COUNT))||';  ';
          ELSEIF LCASE(TYPE)='i' THEN
             SET MESSAGE=MESSAGE||'3.插入记录：'||RTRIM(CHAR(COUNT))||';  ';
          END IF;
          SET RUNSTATUS=0;
          SET SQL='';
        END IF;
        IF RUNSTATUS<>0 THEN RETURN 0; END IF;
        
      ELSEIF UCASE(TYPE)='P' THEN
          PREPARE s2 FROM STMT2;
        EXECUTE s2;
        IF ERR_MSG<>'' THEN
          SET MESSAGE=MESSAGE||ERR_MSG; 
          SET RUNSTATUS=1;
          SET SQL=STMT2;
        ELSE
          SET MESSAGE=MESSAGE||'2.数据加载成功;  ';
          SET RUNSTATUS=0;
          SET SQL='';
        END IF;
        IF RUNSTATUS<>0 THEN RETURN 0; END IF;
      END IF;
      
      SET i=i+1;
    END WHILE;
    CLOSE c1;
END;
